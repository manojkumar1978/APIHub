<?xml version="1.0" encoding="UTF-8"?>
<api context="/file" name="fileProcessAPI" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/split">
        <inSequence>
            <!-- <property expression="wso2:vault-lookup('sftp_password')" name="password" scope="default" type="STRING"/> -->
            <!-- <property expression="get-property('transport', 'X-Route-Header')" name="password" scope="default" type="STRING"/>-->
            <!--  <property expression="get-property('registry', 'conf:/properties/properties.json@sftp_password')" name="password" scope="axis2" type="STRING"/> -->
            <!-- <property expression="get-property('registry', 'conf:/properties/properties.json@sftp_password')" name="password" type="STRING"/> -->
            <property expression="wso2:vault-lookup('sftp_password')" name="password" scope="default" type="STRING"/>
            <log>
                <property expression="$ctx:password" name="PASSWORD"/>
            </log>
            <file.read configKey="FILE_CONNECTION">
                <path>/ltipremierdev/choreoPOC/input/test.csv</path>
                <readMode>Complete File</readMode>
                <startLineNum>0</startLineNum>
                <lineNum>0</lineNum>
                <contentType>text/plain</contentType>
                <includeResultTo>Message Property</includeResultTo>
                <resultPropertyName>csvData</resultPropertyName>
                <enableStreaming>false</enableStreaming>
                <enableLock>false</enableLock>
            </file.read>
            <property expression="$ctx:FILE_NAME" name="fileReadName" scope="default" type="STRING"/>
            <log level="full">
                <property expression="$ctx:csvData" name="csvData"/>
                <property expression="$ctx:fileReadName" name="FILE_NAME"/>
            </log>
            <payloadFactory media-type="xml">
                <format>
                    <lines xmlns="">
                        <line>$1</line>
                    </lines>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('csvData')"/>
                </args>
            </payloadFactory>
            <payloadFactory media-type="json" template-type="freemarker">
                <format><![CDATA[{   "lines": [
<#list payload.lines.line?string?split("\n") as line>    
		 {       
"line": "${line}"
}   
<#if line_has_next>,</#if>     </#list>  
]
}]]></format>
                <args/>
            </payloadFactory>
            <log level="full"/>
			 <foreach expression="json-eval($.lines)">
                <sequence>
                    <property expression="json-eval($.line)" name="value" scope="default" type="STRING"/>
                    <property expression="fn:substring-before(get-property('value'),',')" name="counter" scope="default" type="STRING"/>
                    <property expression="fn:concat('/ltipremierdev/choreoPOC/output/file',$ctx:counter,'.txt')" name="filename" scope="default" type="STRING"/>
                    <file.write configKey="FILE_CONNECTION">
                        <filePath>{$ctx:filename}</filePath>
                        <contentOrExpression>{json-eval($.line)}</contentOrExpression>
                        <mimeType>Automatic</mimeType>
                        <compress>false</compress>
                        <writeMode>Overwrite</writeMode>
                        <enableStreaming>false</enableStreaming>
                        <appendNewLine>false</appendNewLine>
                        <enableLock>false</enableLock>
                        <includeResultTo>Message Body</includeResultTo>
                        <updateLastModified>true</updateLastModified>
                    </file.write>
                </sequence>
            </foreach>
            <!--<iterate continueParent="true" expression="json-eval($.lines)">
                <target>
                    <sequence>
                        <property expression="json-eval($.line)" name="value" scope="default" type="STRING"/>
                        <property expression="fn:substring-before(get-property('value'),',')" name="counter" scope="default" type="STRING"/>
                        <property expression="fn:concat('/ltipremierdev/choreoPOC/output/file',$ctx:counter,'.txt')" name="filename" scope="default" type="STRING"/>
                        <file.write configKey="FILE_CONNECTION">
                            <filePath>{$ctx:filename}</filePath>
                            <contentOrExpression>{json-eval($.line)}</contentOrExpression>
                            <mimeType>Automatic</mimeType>
                            <compress>false</compress>
                            <writeMode>Overwrite</writeMode>
                            <enableStreaming>false</enableStreaming>
                            <appendNewLine>false</appendNewLine>
                            <enableLock>false</enableLock>
                            <includeResultTo>Message Property</includeResultTo>
                            <resultPropertyName>writefiledata</resultPropertyName>
                            <updateLastModified>true</updateLastModified>
                        </file.write>
                    </sequence>
                </target>
            </iterate> -->
            <payloadFactory media-type="text">
                <format>Files are placed successfully</format>
                <args/>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
